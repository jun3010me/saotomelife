課題研究の成績配分
期末考査:100点
ノート点:20点
実技課題(態度):80点


■関数
max(引数)
戻り値が出力される

■pythonで使える演算子
+ - * / % 
比較演算子
< <= > >= == !=
※aがbと等しくない　と記述する場合はa!=b

■データ型
整数3  5  -6
浮動小数点数3.14 1.08
文字列hello こんにちは
ブール値True False

type()

文字を扱う場合は"か'を使う

■問「He says "Hi,hello!" to me」
と出力するにはどうしたら良いでしょう

■キャスト
int関数

int(2.5)
float()
str()
bool()

■IF文の使い方

if 条件:
処理１
処理２
↑インデントを必ず空ける

elif 条件:#2つ目の条件を付ける時は「elif」(elseifの略)を使う
処理３
処理４

else #条件を満たさないものに処理を追加する場合は「else」を使う
処理５
処理６

■while文(繰り返し)の使い方

while 繰り返しを続ける条件:
処理１
処理２
↑インデントを必ず空ける

■配列
※pythonでは配列は3種類ある
リスト
subject = [78,95]
subject[0] = 80

タプル
subject = (78,95)
配列の中身は更新できない

辞書

■問1 hantei.py
入力した数字が偶数なら"gusu"
奇数なら"kisu"と表示するプログラム
を作成せよ

■問2　10to2.py
入力した10進数を2進数に変換する
プログラムを作成せよ

★ヒント
a = int(input("input a:"))
c=int(0)
b=int(1)

while a > 0:
#出力する変数に、aを2で割った余り(a%2)に桁(b)をかけたものを足す
a=int(a/2)
b=b*10
print(c)

240   11110000

■問3　2to10.py
入力した2進数を10進数に変換する
プログラムを作成せよ

★ヒント
a = int(input("input a:"))
c=int(0)
b=int(1)

while a > 0:
#出力する変数に、aを？？で割った余り(a%？)に桁(b)をかけたものを足す
a=int(a/2)
b=b*？？
print(c)

■問4　2to16.py
入力した2進数を16進数に変換する
プログラムを作成せよ。
※難しい場合は、8ビットまででも良い
※4ビットずつに区切って10進数変換。10～15はA～Fに変えたらおｋ

★ヒント
8ビットで入力することとなるので、その数字を4桁と4桁に分ける。
→分け方は前回までの授業で解説済み

その4ビット分の2進数を10進数に変換する
→問3と同じ仕組みで可能

最後に、もし10だったらA、もし11だったらB、・・・、もし15だったらF
と、ひたすらifで変換していけば、16進数の出来上がり。


★16進数について
n進数は、1つの桁で使う数字がn個あるよ。という数の数え方の表現方法。
例：10進数は0,1,2,3,4,5,6,7,8,9の10個の数字を1桁で使う数え方だよ。
　　2進数は0,1の2個の数字を1桁で使う数え方だよ。

つまり、16進数は一つの桁で使う数字が16個ある数の数え方ということ。
0,1,2,3,4,5,6,7,8,9・・・では16個にならないので、
よし、ならばアルファベットも使おうということになった。ってなわけで、、
0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,Fで1つの桁にして数を数えよう！
と人間が決めた。それが16進数という数の数え方である。
16進数は主に、コンピュータで計算された結果を、
人間が視認するために使われている。

なぜコンピュータ上の数値を16進数に変換するかというと、
2進数と16進数の相性がとっても良いから。

2進数で4ビット(4桁)分を0から数えると、
0000
0001
0010
0011
0100
0101
0110
0111
1000
1001
1010
1011
1100
1101
1110
1111
と丁度、16個になる。これに16進数も0からFまで一緒に数えてみると、

0000 0
0001 1
0010 2
0011 3
0100 4
0101 5
0110 6
0111 7
1000 8
1001 9
1010 A
1011 B
1100 C
1101 D
1110 E
1111 F

となって、2進数の4ビット分が、16進数の1桁分に相当する。
なので、「コンピュータではすべての計算を2進数で計算しているけど、
0と1ばかり見ていると何が何だかようわからんくなる。
なら4ビットで区切って16進数で表示したら、アルファベットも混ざるけど、
それとなく10進数に近い。これなら人間が見ても大体の値が想像できそうじゃん？」
的な観点から、情報の世界で使われるようになった。

　￣￣￣￣￣￣○￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ 
　　　　　　　　　　　O 。 
　　　　　　　　　　　　　　　　 , ─ヽ 
＿＿＿＿＿＿＿＿　　　　/,/＼ヾ＼ 　　／￣￣￣￣￣￣￣￣￣ 
|＿＿|＿＿|＿＿|＿　　 __（（´∀｀＼　）＜　というお話だったのサ 
|＿|＿＿|＿＿|＿＿　／ノへゝ/''' 　)ヽ　　＼＿＿＿＿＿＿＿＿＿ 
||＿＿|　　　　　　　 | | ＼´-｀）　/　丿/ 
|＿|＿|　从.从从　　| ＼__￣￣⊂|丿/ 
|＿＿|| 从人人从.　|　/＼＿＿/::::::||| 
|＿|＿|／//ヽヾ＼　 /　　　::::::::::::ゝ/|| 
────────(~～ヽ::::::::::::|／　　　　　　　　＝ 続 ＝ 

★ヒント
8ビットまでの数字を入力する
入力した数字(2進数のはず)を4ビットずつに区切る
※区切る方法は先ほど説明した

区切った数字をそれぞれ別の変数に入れる
変数に入れた数字を10進数に変換する。
その際10から15までの数字はAからFに変換すれば16進数の出来上がり。
最後に16進数が入った2つの変数を出力する。
print(a1,a2)
みたいにすれば2つの変数を一度に出力できる。

★2進数を扱う上での注意
整数型の変数では、0を含む数字を入れることはできませーん。
int型に0000を入れようとするとエラーが起こります。
どうしても0000を扱いたい場合はchar型にして文字として扱うか、
整数型で計算する方法を考えましょう。


■問5　16to2.py
入力した16進数を2進数に変換する
プログラムを作成せよ。
※難しい場合は、16進数1桁までで良い。

※list関数を使うと、文字列が1文字ずつ配列に代入される！
例
a = "junuozumi"
list(a)
['j', 'u', 'n', 'u', 'o', 'z', 'u', 'm', 'i']

※len関数を使うと、文字列の文字数が返ってくる
例
a = "junuozumi"
len(a)
9

■問6　6.txt
これまで作ってきたプログラムに、それぞれ値段を設定せよ。
また、その理由も記述すること。

■datetimeについて学ぶ
pythonで日付や時間を扱う為に、標準ライブラリにdatetime関数が用意されている。

ファイル名「datetimetest.py」を作成し、
以下のプログラムを作成せよ。

import datetime

today = datetime.date.today()
todaydetail = datetime.datetime.today()

# 今日の日付
print ('--------------------------------------------')

print(today)
print(todaydetail)

# 今日に日付：それぞれの値
print('--------------------------------------------')
print (today.year)
print (today.month)
print (today.day)
print (todaydetail.year)
print (todaydetail.month)
print (todaydetail.day)
print (todaydetail.hour)
print (todaydetail.minute)
print (todaydetail.second)
print (todaydetail.microsecond)
# 日付のフォーマット
print ('--------------------------------------------')
print (today.isoformat())
print (todaydetail.strftime("%Y/%m/%d %H:%M:%S"))

■問7　birthdaysecond.py
誕生日と今日の日付を入力すると、今までに生きてきた秒数を表示するプログラムを作成せよ。
※月の端数(31日や28日など)や閏年は考えないものとする。

■問7.9
買い物の金額を入力したら、消費税8%を含めた金額を出力するプログラムを作成せよ。

■問8　shopping.py
買い物の金額を入力して、0が入力するまで累積していく。
0が入力されたら、消費税8%を合わせて合計金額を出力する。というプログラムを作成せよ。


■問9　uruu.py
西暦2017年から2030年までの各年が閏年かどうかを判定し、出力するプログラムを作成せよ。


出力例
2017年　平年
2018年　平年
・
・
2020年　閏年
2021年　平年

※閏年の条件は、西暦を4で割った余りが0でかつ100で割った余りが0ではない。または、400で割った余りが0


print関数の使い方メモ
answer1 = 50
answer2 = 100
print("答え1は{0}で、答え2は{1}だ！".format(answer1,answer2))


ifの使い方メモ
a = 20

if a > 10 and a < 30:
print(a)

で、複数条件を扱うことができる

■関数について
def 関数名(引数1,引数2,･･･):
     命令1
	 命令2
return 戻り値

という感じに記述する。
具体的に書くと

例1
def say_hello():
	print("Hi!")

say_hello()

これを実行すると、最初にsay_hello関数を定義し、その後に実行するという流れとなる。

例2
def add(a,b):
    return a + b

add(3,4)

これを実行すると、引数として受け取った数値を変数aと変数bに代入し、戻り値としてa+bの値を出力している。

 ■引数のデフォルト値設定
	 def say_hello(name="Jun"):
	      print("Hi! " + name)
  この関数を使う場合、引数に指定した文字列を変数nameに代入するが、何も代入しないとデフォルト値を返す。

  >>>say_hello()
  Hi! Jun

  >>>say_hello("Mr.Rin")
  Hi! Mr.Rin

  ■問10(やらなくても、まぁ、いいよ)
  これまで作成してきたプログラムで、関数化した方が効率が良くなるものがいくつかある。
    それらの内容を見直してみよう。

※printで文字列を出力する際に改行したい場合
  >>>print("aaaa\nbbbb")
aaaa
bbbb
 「\」そのものをprintした場合、\\と記述する
 >>>print("aaaa\\bbbb")
aaaa\bbbb
■問11 to10.py
 入力した数値(2進数or16進数)を、10進数に変換するプログラムを作成せよ。
 ただし、関数の機能をうまく使うこと。
 最初に数値を入力し、その数値が何進数かを入力すると、
 変換結果が出力される。という流れ。

 使用イメージ
value:11110000
input:2
240

value:20
input:16

32


例
def tasu(a,b):
  c = a + b
  return c

def hiku(a,b):
	c = a - b
	return c

a = int(input("input a:"))
b = int(input("input b:"))
if a<b:
  c = tasu(a,b)
else:
  c = hiku(a,b)

print(c)

■よくあるエラーメッセージ
SyntaxError
→一番よくあるエラー。文法が違う。
例：「：」が抜けている　などのミスが多い

その内容で、indentやindentedと出ていたら、インデントの位置がおかしい。
 invalid tokenはトークンエラー。その変数に入れる文字や数値が
 変数の型に合っていない。とか。

 overflowだと、その変数の型を超えた計算結果が出てしまった。と考えられる。
 "@@@" is not definedは「定義されてない変数をいきなり使ってんじゃねーよ」
 という意味

 File "@@@@@@", line 43, in <module>
 →43行目がエラー箇所ですよ。

 ■同一ディレクトリ上にあるpyファイルを別プログラムから読む
 例
 test.pyの中身が
def tasu(a,b):
  c = a + b
  return c
def hiku(a,b):
  c = a - b
  return c

だとする。

aaaa.pyの中身に以下のように記述すると、test.pyの中で定義した関数を利用することができる。
import test
jun = test.tasu(5,6)
print(jun)

※関数名の前にインポートしたモジュール(ファイルのこと)名を記述する必要がある。理由は、どこで定義された関数かを区別するためである。
結果：11と表示される
■問12 henkan.py
これまで作成した進数変換プログラムをすべて関数化し、2進数、10進数、16進数を相互変換できるプログラムを作成せよ。
関数名は特に指定しない。
使い方は実行後直後に説明が表示されるように工夫するか、
関数と同じような使い方（とにかくシンプルな使い方）にすること。

問13 ファイル名はわかるように自由に付けてください
これまで得た知識を使って問題を作成し、それを解決するプログラムを作成せよ。

■これまでのおさらい
★入力した文字を出力するだけのプログラム
a = int(input("input:"))
print(a)

解説:aっていう名前の箱（変数）の中に、キーボードで入力した数字が入る。
その後で出力（print）される。だけ。それだけのプログラム。


★ifの使い方
a = int(input("input:"))
if a > 50:
	print("合格")

						解説:aに数字を入れる。もしaの中身が50よりも大きかったら、「合格」と表示する


★elseやelif（pythonではelse ifをこう略す）の使い方
a = int(input("input:"))
if a > 50:
	print("合格")
else:
	print("残念！")

解説：さっきのプログラムに50未満なら「残念！」と表示するものを追加した
ifで条件を1つ作って、それにあてはまらないものの処理をしたい場合は、
elseを使う

a = int(input("input:"))
if a > 50:
	print("合格")
elif a > 40:
	print("あと少し！")
else:
	print("残念！")

解説：さっきのプログラムで、2つ目の条件を付けたい場合は、elifを使う。
